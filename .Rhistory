fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_line(aes(y = value_smooth60),color = lineblue) +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_1-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 60
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_point() +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-2*value_smooth_sd60, ymax = value_smooth60+2*value_smooth_sd60),
fill = shadeblue, alpha = .25) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth60),color = lineblue) +
geom_point(data = subset(longreport, value < value_smooth60-2*value_smooth_sd60 | value > value_smooth60+2*value_smooth_sd60), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-60_2-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-2*value_smooth_sd365, ymax = value_smooth365+2*value_smooth_sd365),
fill = shadegreen, alpha = .25) +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_point(data = subset(longreport, value < value_smooth365-2*value_smooth_sd365 | value > value_smooth365+2*value_smooth_sd365), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_2-365%s.png',suffix),width = figwidth, height = figheight)
}
fBIRN_Figures(file.path('//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA','QA_Report.csv'))
makeFigures_selectedMeasures <- function(longreport, suffix,figwidth = 30, figheight = 'calc'){
jandates = c('010117','010118','010119','010120','010121','010122')
dates = c('070116','100116',
'040117','070117','100117',
'040118','070118','100118',
'040119','070119','100119',
'040120','070120','100120',
'040121','070121','100121'
)
shadegreen <- '#009933'
linegreen <- '#33ff33'
shadeblue <- '#0033cc'
lineblue <- '#33ccff'
#3/2 ratio for figure size.
if(figheight == 'calc'){figheight = figwidth*2/3}
#1SD, 60&365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Green: 1yr smooth. Blue: 60day smooth. Shaded = +/-1SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_line(aes(y = value_smooth60),color = lineblue) +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_1-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 60
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_point() +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-2*value_smooth_sd60, ymax = value_smooth60+2*value_smooth_sd60),
fill = shadeblue, alpha = .25) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth60),color = lineblue) +
geom_point(data = subset(longreport, value < value_smooth60-2*value_smooth_sd60 | value > value_smooth60+2*value_smooth_sd60), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-60_2-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-2*value_smooth_sd365, ymax = value_smooth365+2*value_smooth_sd365),
fill = shadegreen, alpha = .25) +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_point(data = subset(longreport, value < value_smooth365-2*value_smooth_sd365 | value > value_smooth365+2*value_smooth_sd365), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_2-365%s.png',suffix),width = figwidth, height = figheight)
}
fBIRN_Figures(file.path('//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA','QA_Report.csv'))
longreport <- getTolerances(file.path('//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA','QA_Report.csv'))
makeFigures(longreport)
makeFigures(longreport)
makeFigures <- function(longreport){
longreport$measure <- as.character(longreport$measure)
#all measures
makeFigures_selectedMeasures(longreport,'_allmeasures')
#core measures
core_measures = c("percentFluc","drift","driftfit","SNR","SFNR","rdc")
makeFigures_selectedMeasures(subset(longreport, measure %in% core_measures),'_coremeasures',figwidth = 12, figheight = 6)
}
makeFigures_selectedMeasures <- function(longreport, suffix,figwidth = 30, figheight = 'calc'){
jandates = c('010117','010118','010119','010120','010121','010122')
dates = c('070116','100116',
'040117','070117','100117',
'040118','070118','100118',
'040119','070119','100119',
'040120','070120','100120',
'040121','070121','100121'
)
shadegreen <- '#009933'
linegreen <- '#33ff33'
shadeblue <- '#0033cc'
lineblue <- '#33ccff'
#3/2 ratio for figure size.
if(figheight == 'calc'){figheight = figwidth*2/3}
#1SD, 60&365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Green: 1yr smooth. Blue: 60day smooth. Shaded = +/-1SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_line(aes(y = value_smooth60),color = lineblue) +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_1-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 60
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Blue: 60day smooth. Shaded = +/- 1&2 SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-2*value_smooth_sd60, ymax = value_smooth60+2*value_smooth_sd60),
fill = shadeblue, alpha = .25) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth60),color = lineblue) +
geom_point(data = subset(longreport, value < value_smooth60-2*value_smooth_sd60 | value > value_smooth60+2*value_smooth_sd60), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-60_2-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Green: 1yr smooth. Shaded = +/- 1&2 SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-2*value_smooth_sd365, ymax = value_smooth365+2*value_smooth_sd365),
fill = shadegreen, alpha = .25) +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_point(data = subset(longreport, value < value_smooth365-2*value_smooth_sd365 | value > value_smooth365+2*value_smooth_sd365), color = 'red') +
facet_wrap(.~measure,scales = 'free')
ggsave(sprintf('measures_1-365_2-365%s.png',suffix),width = figwidth, height = figheight)
}
makeFigures(longreport)
makeFigures <- function(longreport){
longreport$measure <- as.character(longreport$measure)
#all measures
makeFigures_selectedMeasures(longreport,'_allmeasures')
#core measures
core_measures = c("percentFluc","drift","driftfit","SNR","SFNR","rdc")
makeFigures_selectedMeasures(subset(longreport, measure %in% core_measures),'_coremeasures',figwidth = 12, figheight = 6)
}
makeFigures_selectedMeasures <- function(longreport, suffix,figwidth = 30, figheight = 'calc'){
jandates = c('010117','010118','010119','010120','010121','010122')
dates = c('070116','100116',
'040117','070117','100117',
'040118','070118','100118',
'040119','070119','100119',
'040120','070120','100120',
'040121','070121','100121'
)
shadegreen <- '#009933'
linegreen <- '#33ff33'
shadeblue <- '#0033cc'
lineblue <- '#33ccff'
#3/2 ratio for figure size.
if(figheight == 'calc'){figheight = figwidth*2/3}
#1SD, 60&365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Green: 1yr smooth. Blue: 60day smooth. Shaded = +/-1SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_line(aes(y = value_smooth60),color = lineblue) +
facet_wrap(.~measure,scales = 'free') +
theme(axis.text.x = element_text(angle = 30))
ggsave(sprintf('measures_1-365_1-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 60
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Blue: 60day smooth. Shaded = +/- 1&2 SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-2*value_smooth_sd60, ymax = value_smooth60+2*value_smooth_sd60),
fill = shadeblue, alpha = .25) +
geom_ribbon(aes(y = value_smooth60, ymin = value_smooth60-value_smooth_sd60, ymax = value_smooth60+value_smooth_sd60),
fill = shadeblue, alpha = .5) +
geom_line(aes(y = value_smooth60),color = lineblue) +
geom_point(data = subset(longreport, value < value_smooth60-2*value_smooth_sd60 | value > value_smooth60+2*value_smooth_sd60), color = 'red') +
facet_wrap(.~measure,scales = 'free')+
theme(axis.text.x = element_text(angle = 30))
ggsave(sprintf('measures_1-60_2-60%s.png',suffix),width = figwidth, height = figheight)
#1&2 SD, 365
ggplot(longreport, aes(x = scandate_epoch, y = value)) +
theme_bw() +
geom_vline(xintercept = as.numeric(as.Date(jandates,format = '%m%d%y')), color = 'black') +
geom_vline(xintercept = as.numeric(as.Date(dates,format = '%m%d%y')), color = '#CCCCCC') +
scale_x_continuous(breaks = as.numeric(as.Date(jandates,format = '%m%d%y')), labels = as.character(as.Date(jandates, format = '%m%d%y'))) +
labs(x = '',title = 'Green: 1yr smooth. Shaded = +/- 1&2 SD') +
geom_point() +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-2*value_smooth_sd365, ymax = value_smooth365+2*value_smooth_sd365),
fill = shadegreen, alpha = .25) +
geom_ribbon(aes(y = value_smooth365, ymin = value_smooth365-value_smooth_sd365, ymax = value_smooth365+value_smooth_sd365),
fill = shadegreen, alpha = .5) +
geom_line(aes(y = value_smooth365),color = linegreen) +
geom_point(data = subset(longreport, value < value_smooth365-2*value_smooth_sd365 | value > value_smooth365+2*value_smooth_sd365), color = 'red') +
facet_wrap(.~measure,scales = 'free')+
theme(axis.text.x = element_text(angle = 30))
ggsave(sprintf('measures_1-365_2-365%s.png',suffix),width = figwidth, height = figheight)
}
makeFigures(longreport)
msg <- as.character()
msg <- c(msg,'first line')
msg <- c(msg,'second line')
msg
a <- '123'
typeof(a)
devtools::load_all()
fBIRN_Report(scans_after_epoch = 1483228800)
makereport(system = 'Windows')
library(ggplot2)
makereport(system = 'Windows')
devtools::load_all()
makereport(system = 'Windows')
library(ggplot2)
library(ggbeeswarm)
library(ggbeeswarm)
makereport(system = 'Windows')
makereport(system = 'Windows')
longreport <- getTolerances('import')
report = '//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA/QA_Report.csv'
longreport <- getTolerances('import')
longreport <- getTolerances(report = report)
head(longreport)
summary(longreport)
knitr::opts_chunk$set(echo = TRUE)
lastscan <- longreport[longreport$scandate_epoch == max(longreport$scandate_epoch,na.rm = TRUE),]
lastscan <- lastscan[!is.na(lastscan$scandate_epoch),]
lastscan
text_green <- '#3CA61C'
text_red <- '#E12A1B'
lastscandate_str <- format(as.Date(unique(lastscan$scandate_epoch),origin = '1970-01-01'),'%m-%d-%y')
allpass <- all(lastscan$z_value_smooth60 <=2 & lastscan$z_value_smooth60 >= -2)
if(allpass){
passcolor = text_green
passtext = 'All metrics in acceptable range.'
} else {
passcolor = text_red
passtext = 'Attention: metrics out of range.'
}
passcolor
passtext
#Table for most recent scan core values
measure_pretty <- list()
measure_pretty$SNR <- 'SNR'
measure_pretty$SFNR <- 'SFNR'
measure_pretty$percentFluc <- '% Fluctuation'
measure_pretty$drift <- 'Drift'
measure_pretty$driftfit <- 'Drift (Fit)'
measure_pretty$rdc <- 'RDC'
these_measures <- c('drift','driftfit','percentFluc','rdc','SFNR','SNR')
oneyeardat <- subset(longreport, scandate_epoch > as.numeric(Sys.Date())-365)
oneyeardat$z_value_smooth60 <- unlist(lapply(1:dim(oneyeardat)[1], function(x){
(oneyeardat$value[x] - mean(oneyeardat$value[oneyeardat$measure == oneyeardat$measure[x]],na.rm = TRUE)) / sd(oneyeardat$value[oneyeardat$measure == oneyeardat$measure[x]],na.rm = TRUE)
}))
lastscan_values <- data.frame(
measure = these_measures,
LastScan = lastscan$value[unlist(lapply(these_measures, function(x){which(lastscan$measure == x)}))])
lastscan_values$mean <- unlist(lapply(these_measures, function(x){mean(oneyeardat$value[oneyeardat$measure == x], na.rm = TRUE)}))
lastscan_values$sd <- unlist(lapply(these_measures, function(x){sd(oneyeardat$value[oneyeardat$measure == x], na.rm = TRUE)}))
lastscan_values$Mean_2SD <- unlist(lapply(1:dim(lastscan_values)[1], function(x){sprintf('%.2f [%.2f, %.2f]',lastscan_values$mean[x],lastscan_values$mean[x]-2*lastscan_values$sd[x], lastscan_values$mean[x]+2*lastscan_values$sd[x])}))
dim(lastscan_values)
measure_pretty[these_measures]
unlist(measure_pretty[these_measures])
dim(lastscan_values)
lastscan_values
these_measures
lastscan_values <- data.frame(
measure = these_measures,
LastScan = lastscan$value[unlist(lapply(these_measures, function(x){which(lastscan$measure == x)}))])
lastscan_values
rm(lastscan_values)
lastscan_values <- data.frame(
measure = these_measures,
LastScan = lastscan$value[unlist(lapply(these_measures, function(x){which(lastscan$measure == x)}))])
lastscan_values
lastscan$value[unlist(lapply(these_measures, function(x){which(lastscan$measure == x)}))]
dim(lastscan)
lastscan
makereport(system = 'Windows')
devtools::document()
devtools::document()
devtools::document()
sessionInfo()
library(knitr)
sessionInfo()
devtools::document()
a = data.frame(a = c(1,2,3),b = c('a','b','c'),stringsAsFactors = FALSE)
a
a$ab <- paste(a$a,a$b,sep = '    ')
a
devtools::document()
devtools::load_all()
longreport <- getTolerances(report = '//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA/QA_Report.csv')
knitr::opts_chunk$set(echo = TRUE)
text_green <- '#3CA61C'
text_red <- '#E12A1B'
lastscan <- longreport[longreport$scandate_epoch == max(longreport$scandate_epoch,na.rm = TRUE),]
lastscan <- lastscan[!is.na(lastscan$scandate_epoch),]
lastscandate_str <- format(as.Date(unique(lastscan$scandate_epoch),origin = '1970-01-01'),'%m-%d-%y')
allpass <- all(lastscan$z_value_smooth60 <=2 & lastscan$z_value_smooth60 >= -2)
if(allpass){
passcolor = text_green
passtext = 'All metrics in acceptable range.'
} else {
passcolor = text_red
passtext = 'Attention: metrics out of range.'
}
measure_pretty <- list()
measure_pretty$SNR <- 'SNR'
measure_pretty$SFNR <- 'SFNR'
measure_pretty$percentFluc <- '% Fluctuation'
measure_pretty$drift <- 'Drift'
measure_pretty$driftfit <- 'Drift (Fit)'
measure_pretty$rdc <- 'RDC'
these_measures <- c('drift','driftfit','percentFluc','rdc','SFNR','SNR')
oneyeardat <- subset(longreport, scandate_epoch > as.numeric(Sys.Date())-365)
oneyeardat$z_value_smooth60 <- unlist(lapply(1:dim(oneyeardat)[1], function(x){
(oneyeardat$value[x] - mean(oneyeardat$value[oneyeardat$measure == oneyeardat$measure[x]],na.rm = TRUE)) / sd(oneyeardat$value[oneyeardat$measure == oneyeardat$measure[x]],na.rm = TRUE)
}))
lastscan_values <- data.frame(
measure = these_measures,
LastScan = lastscan$value[unlist(lapply(these_measures, function(x){which(lastscan$measure == x)}))])
lastscan_values$mean <- unlist(lapply(these_measures, function(x){mean(oneyeardat$value[oneyeardat$measure == x], na.rm = TRUE)}))
lastscan_values$sd <- unlist(lapply(these_measures, function(x){sd(oneyeardat$value[oneyeardat$measure == x], na.rm = TRUE)}))
lastscan_values$Mean_2SD <- unlist(lapply(1:dim(lastscan_values)[1], function(x){sprintf('%.2f [%.2f, %.2f]',lastscan_values$mean[x],lastscan_values$mean[x]-2*lastscan_values$sd[x], lastscan_values$mean[x]+2*lastscan_values$sd[x])}))
lastscan_values
row.names(lastscan_values) <- unlist(measure_pretty[these_measures])
lastscan_values
lastscan_values$LastScan_Mean_2SD <- paste(lastscan_values$LastScan, lastscan_values$Mean_2SD,sep = '        ')
lastscan_values
lastscan_values[,c('LastScan_Mean_2SD')]
knitr::kable(lastscan_values[,c('LastScan_Mean_2SD')], format = 'html', table.attr = "style = 'width:80%;'")
lapply('nchar',lastscan_values$LastScan)
lapply('nchar',as.character(lastscan_values$LastScan))
lastscan_values$LastScan[1]
nchar(lastscan_values$LastScan[1])
nchar(lastscan_values$LastScan)
lapply(lastscan_values$LastScan, function(x){paste(x,rep('&nbsp;',12-nchar(x)))})
lapply(lastscan_values$LastScan, function(x){c(x,rep('&nbsp;',12-nchar(x)))})
lapply(lastscan_values$LastScan, function(x){c(x,rep('&nbsp;',-nchar(x)))})
lapply(lastscan_values$LastScan, function(x){c(x,rep('&nbsp;',6-nchar(x)))})
unlist(lapply(lastscan_values$LastScan, function(x){c(x,rep('&nbsp;',6-nchar(x)))}))
lapply(lastscan_values$LastScan, function(x){paste(x,rep('&nbsp;',6-nchar(x)),collapse='')})
lapply(lastscan_values$LastScan, function(x){paste(x,rep('&nbsp;',6-nchar(x)))})
lapply(lastscan_values$LastScan, function(x){c(x,rep('&nbsp;',6-nchar(x)))})
lapply(lastscan_values$LastScan, function(x){paste(c(x,rep('&nbsp;',6-nchar(x))),collapse='')})
unlist(lapply(lastscan_values$LastScan, function(x){paste(c(x,rep('&nbsp;',6-nchar(x))),collapse='')}))
numchar <- nchar(lastscan_values$LastScan)
maxnumchar <- max(numchar)
lastscan_values$LastScan_spaced <- unlist(lapply(lastscan_values$LastScan, function(x){paste(c(x,rep('&nbsp;',(maxnumchar+4)-nchar(x))),collapse='')}))
row.names(lastscan_values) <- unlist(measure_pretty[these_measures])
lastscan_values$LastScan_Mean_2SD <- paste(lastscan_values$LastScan_spaced, lastscan_values$Mean_2SD,sep = '')
lastscan_values
lastscan_values
names(lastscan_values)
devtools::document()
knitr::kable(lastscan_values[,c('LastScan_Mean_2SD')], format = 'html', table.attr = "style = 'width:80%;'")
lastscan_values
row.names(lastscan_values)
rnumchar <- nchar(row.names(lastscan_values))
maxrnumchar <- max(rnumchar)
lastscan_values$measure_spaced <- unlist(lapply(row.names(lastscan_values), function(x){paste(c(x,rep('&nbsp;',(maxrnumchar+4)-nchar(x))),collapse='')}))
lastscan_values$measure_spaced
lastscan_values$toprint <- paste(lastscan_values$measure_spaced,lastscan_values$LastScan_spaced, lastscan_values$Mean_2SD,sep = '')
lastscan_values$toprint
header <- paste(c('Measure','&nbsp;','LastScan','&nbsp;','Mean [2SD]'),collapse = '')
header
measure_head <- 'Measure'
lastscan_head <- 'LastScan'
msd_head <- 'Mean [2SD]'
header <- paste(c(measure_head, rep('&nbsp;',(maxrnumchar+4)-nchar(measure_head)),
lastscan_head, rep('&nbsp;',(maxnumchar+4)-nchar(lastscan_head)),
msd_head),collapse = '')
header
devtools::document()
lastscan_values$toprint
paste(lastscan_values$toprint,collapse = '<br>')
devtools::document()
devtools::document()
devtools::document()
Sys.Date()
Sys.Date(format = '%Y%m%d')
as.Date(Sys.Date(),format = '%Y%m%d')
as.Date(as.numeric(Sys.Date()),format = '%Y%m%d')
as.Date(as.numeric(Sys.Date(),origin = '1970-01-01'),format = '%Y%m%d')
format(Sys.Date(), format = '%Y%m%d')
format(Sys.Date(), format = '%Y_%m_%d')
devtools::document()
devtools::build_all()
devtools::build()
devtools::document()
ls()
devtools::load_all()
longreport <- getTolerances(file.path('//kumc.edu/data/Research/Hoglund/Bartolotti_J/QA/','QA_Report.csv'),remove_duplicate_rows = FALSE)
dim(longreport)
head(longreport)
tail(longreport)
rr = longreport[1:5,]
rr
rr = rbind(rr,rr[1,])
fullrep = longreport
longreport = rr
numrows <- dim(longreport)[1]
i = 1
j = 6
r1 = longreport[i,]
r2 = longreport[j,]
r1[,1]
unlist(lapply(1:dim(r1)[2],function(x){r1[x]==r2[x]}))
all(unlist(lapply(1:dim(r1)[2],function(x){r1[x]==r2[x]})))
all(unlist(lapply(1:dim(r1)[2],function(x){r1[x]==r2[x]})),na.rm = TRUE)
duplicated(rr)
longreport <- longreport[!duplicated(longreport),]
dim(longreport)
devtools::document()
basedir <- '//kumc.edu/data/Research/Hoglund/Bartolotti_J/'
setwd(basedir)
dir(
)
setwd(file.path(basedir,'LoadCells'))
dir()
setwd(file.path(basedir,'LoadCells','logs_clamp_09192022'))
dir()
mydat <- read.csv('amp0257_vernier0-3_1000g-4500g.csv',stringsAsFactors = FALSE)
head(mydat)
library(ggplot2)
library(ggbeeswarm)
colnames(mydat)[1] <- 'amp'
ggplot(data <- mydat, aes(x = N, y = V, color = amp, shape = vernier)) +
theme_bw() +
geom_point()
ggplot(data <- mydat, aes(x = N, y = V, color = amp, shape = factor(vernier))) +
theme_bw() +
geom_point()
ggplot(data <- mydat, aes(x = N, y = V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point()
ggplot(data <- mydat, aes(x = N, y = V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
geom_line()
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
theme_bw()
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
facet_wrap(~.factor(vernier))
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
facet_wrap(.~factor(vernier))
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
facet_wrap(.~factor(vernier),ncol = 1)
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
facet_wrap(.~factor(vernier),ncol = 1, scales = 'free')
ggplot(data <- mydat, aes(x = N, y = N.V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
geom_line() +
facet_wrap(.~factor(vernier),ncol = 1, scales = 'free')
ggsave('VtoN_byamp_byvernier.png')
ggplot(data <- mydat, aes(x = N, y = V, color = factor(amp), shape = factor(vernier))) +
theme_bw() +
geom_point() +
geom_line()
ggsave('VperN_byamp_byvernier.png')
