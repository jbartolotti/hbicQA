library(ggbeeswarm)
ggplot(qa_gradient_first, aes(x = 1, y = 'drift')) + geom_quasirandom()
ggplot(qa_gradient_first, aes(x = 1, y = drift)) + geom_quasirandom()
qa_baseline$period <- 'baseline'
qa_gradient_first$period <- 'grad1'
qa_graderror$period <- 'grad1_error'
qa_gradient_second$period <- 'grad2'
qa_gradient_third$period <- 'grad3'
qal <- rbind(qa_baseline, qa_gradient_first, qa_graderror, qa_gradient_second, qa_gradient_third)
head(qa_baseline)
head(qa_gradient_first)
head(qa_graderror)
head(qa_gradient_second)
head(qa_gradient_third)
dim(qal)
dim(qa)
qafb_baseline$period <- 'baseline'
qafb_gradient_first$period <- 'grad1'
qafb_graderror$period <- 'grad1_error'
qafb_gradient_second$period <- 'grad2'
qafb_gradient_third$period <- 'grad3'
qafbl <- rbind(qafb_baseline, qafb_gradient_first, qafb_graderror, qafb_gradient_second, qafb_gradient_third)
ggplot(qal, aes(x = period, y = drift)) + geom_quasirandom()
colnames(qal)
qal$phantom <- 'bullet'
qafbl$phantom <- 'fbirn'
qq <- rbind(qal,qafbl)
ggplot(qal, aes(x = period, y = drift, color = phantom)) + geom_quasirandom()
dim(qafbl)
dim(qq)
qafbl
ggplot(qq, aes(x = period, y = drift, color = phantom)) + geom_quasirandom()
dim(qafb)
qafb$scandate
qafb_baseline$scandate
qafb_graderror$scandate
qafb_gradient_first$scandate
qafb_gradient_second$scandate
dates <- list(baseline = list(start = '2000-01-01', end = '2021-12-31'),
gradient_first = list(start = '2022-01-01', end = '2022-07-31'),
graderror = list(start = '2022-08-01', end = '2022-08-18'),
gradient_second = list(start = '2022-08-19', end = '2023-11-24'),
gradient_third = list(start = '2023-11-25', end = '2023-12-12')
)
dates$baseline$start_epoch <- as.numeric(as.Date(dates$baseline$start))
dates$baseline$end_epoch <- as.numeric(as.Date(dates$baseline$end))
dates$gradient_first$start_epoch <- as.numeric(as.Date(dates$gradient_first$start))
dates$gradient_first$end_epoch <- as.numeric(as.Date(dates$gradient_first$end))
dates$graderror$start_epoch <- as.numeric(as.Date(dates$graderror$start))
dates$graderror$end_epoch <- as.numeric(as.Date(dates$graderror$end))
dates$gradient_second$start_epoch <- as.numeric(as.Date(dates$gradient_second$start))
dates$gradient_second$end_epoch <- as.numeric(as.Date(dates$gradient_second$end))
dates$gradient_third$start_epoch <- as.numeric(as.Date(dates$gradient_third$start))
dates$gradient_third$end_epoch <- as.numeric(as.Date(dates$gradient_third$end))
qa_baseline <- subset(qa, scandate_epoch >= dates$baseline$start_epoch & scandate_epoch <= dates$baseline$end_epoch)
qa_gradient_first <- subset(qa, scandate_epoch >= dates$gradient_first$start_epoch & scandate_epoch <= dates$gradient_first$end_epoch)
qa_graderror <- subset(qa, scandate_epoch >= dates$graderror$start_epoch & scandate_epoch <= dates$graderror$end_epoch)
qa_gradient_second <- subset(qa, scandate_epoch >= dates$gradient_second$start_epoch & scandate_epoch <= dates$gradient_second$end_epoch)
qa_gradient_third <- subset(qa, scandate_epoch >= dates$gradient_third$start_epoch & scandate_epoch <= dates$gradient_third$end_epoch)
qafb_baseline <- subset(qafb, scandate_epoch >= dates$baseline$start_epoch & scandate_epoch <= dates$baseline$end_epoch)
qafb_gradient_first <- subset(qafb, scandate_epoch >= dates$gradient_first$start_epoch & scandate_epoch <= dates$gradient_first$end_epoch)
qafb_graderror <- subset(qafb, scandate_epoch >= dates$graderror$start_epoch & scandate_epoch <= dates$graderror$end_epoch)
qafb_gradient_second <- subset(qafb, scandate_epoch >= dates$gradient_second$start_epoch & scandate_epoch <= dates$gradient_second$end_epoch)
qafb_gradient_third <- subset(qafb, scandate_epoch >= dates$gradient_third$start_epoch & scandate_epoch <= dates$gradient_third$end_epoch)
qa_baseline$period <- 'baseline'
qa_gradient_first$period <- 'grad1'
qa_graderror$period <- 'grad1_error'
qa_gradient_second$period <- 'grad2'
qa_gradient_third$period <- 'grad3'
qal <- rbind(qa_baseline, qa_gradient_first, qa_graderror, qa_gradient_second, qa_gradient_third)
qal$phantom <- 'bullet'
qafb_baseline$period <- 'baseline'
qafb_gradient_first$period <- 'grad1'
qafb_graderror$period <- 'grad1_error'
qafb_gradient_second$period <- 'grad2'
qafb_gradient_third$period <- 'grad3'
qafbl <- rbind(qafb_baseline, qafb_gradient_first, qafb_graderror, qafb_gradient_second, qafb_gradient_third)
qafbl$phantom <- 'fbirn'
qq <- rbind(qal,qafbl)
ggplot(qq, aes(x = period, y = drift, color = phantom)) + geom_quasirandom()
qq$gradient_period <- qq$period
qq$gradient_period[qq$gradient_period == 'baseline'] <- 'grad1'
ggplot(qq, aes(x = gradient_periods, y = drift, color = phantom)) + geom_quasirandom()
ggplot(qq, aes(x = gradient_period, y = drift, color = phantom)) + geom_quasirandom()
colnames(qq)
qqdrift <- qq
qqdrift$measure <- 'drift'
qqdrift$value <- qqdrift$drift
qqdriftfit <- qq
qqdriftfit$measure <- 'driftfit'
qqdriftfit$value <- qqdrift$driftfit
qqpercentFluc <- qq
qqpercentFluc$measure <- 'percentFluc'
qqpercentFluc$value <- qqpercentFluc$percentFluc
qqrdc <- qq
qqrdc$measure <- 'rdc'
qqrdc$value <- qqrdc$rdc
qqSNR <- qq
qqSNR$measure <- 'SNR'
qqSNR$value <- qqSNR$SNR
qqSFNR <- qq
qqSFNR$measure <- 'SFNR'
qqSFNR$value <- qqSFNR$SFNR
qqq <- rbind(qqdrift, qqdriftfit, qqpercentFluc, qqrdc, qqSNR, qqSFNR)
ggplot(qqq, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(.~measure, scales = 'free', ncol = 3)
qqqed <- qqq
qqqed <- subset(qqqed,  drift < 2 & percentFluc < .2 & SNR > 50)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(.~measure, scales = 'free', ncol = 3)
getwd()
ggsave('QA_by_gradient.png', width = 12, height = 6)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom, alpha = .5)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 12, height = 6)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom, alpha = .75)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.data = 'mean', geom = 'point', color = 'black') +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom, alpha = .75)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
facet_wrap(.~measure, scales = 'free', ncol = 3)
library(Hmisc)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(fun.data = 'mean_cl', geom = 'pointrange', color = 'black')
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(fun.data = 'mean_cl', geom = 'pointrange', color = 'black') +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', color = 'black') +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', color = 'black') +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 16, height = 8)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', color = 'black', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 16, height = 8)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(fun.y = 'mean', geom = 'point', color = 'black') +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 16, height = 8)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 4) +
#  stat_summary(fun.y = 'mean', geom = 'point') +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 2) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3) +
stat_summary(fun.y = 'mean', geom = 'point', size = 2) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 16, height = 8)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, hjust = -.2) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position(hjust = -.2)) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), aes(x = gradient_period - .2), fun.y = 'mean', geom = 'point', color = 'black', size = 3) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.5)) +
stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('red','blue')) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('red','blue')) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black') +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('red','blue')) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -2.)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('red','blue')) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -.2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('red','blue')) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'blue', size = 1.5, position = position_nudge(x = .2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('#FF6666','#6666FF')) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'blue', size = 1.5, position = position_nudge(x = .2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3)
ggsave('QA_by_gradient.png', width = 16, height = 8)
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('#FF6666','#6666FF')) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'blue', size = 1.5, position = position_nudge(x = .2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3) +
labs(title = 'Gradient 1: 2017-1-1 through 2022-07-31\nGradient1 Error: 2022-08-01 through 2022-08-29\nGradient 2: 2022-08-29 through 2023-11-24\nGradient 3: 2023-12-12 to present')
ggplot(qqqed, aes(x = gradient_period, y = value, color = phantom)) +
theme_bw() +
geom_quasirandom() +
scale_color_manual(values = c('#FF6666','#6666FF')) +
stat_summary(data = subset(qqqed, phantom == 'bullet' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'bullet'), fun.y = 'mean', geom = 'point', color = 'red', size = 1.5, position = position_nudge(x = -.2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn' & gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3, color = 'black', position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'black', size = 3, position = position_nudge(x = .2)) +
stat_summary(data = subset(qqqed, phantom == 'fbirn'), fun.y = 'mean', geom = 'point', color = 'blue', size = 1.5, position = position_nudge(x = .2)) +
#  stat_summary(fun.y = 'mean', geom = 'point', size = 1.5) +
#  stat_summary(data = subset(qqqed, gradient_period %in% c('grad1','grad2')), fun.data = 'mean_cl_normal', geom = 'errorbar', width = .3) +
facet_wrap(.~measure, scales = 'free', ncol = 3) +
labs(title = 'Gradient 1: 2017-1-1 to 2022-07-31\nGradient1_Error: 2022-08-01 to 2022-08-29\nGradient 2: 2022-08-29 to 2023-11-24\nGradient 3: 2023-12-12 to present')
ggsave('QA_by_gradient.png', width = 16, height = 8)
setwd('//kumc.edu/data/Research/Hoglund/Bartolotti_J/fmriquality')
dir()
mm <- read.csv('mot_deriv.r01.1D', sep = '/t')
mm <- read.delim('mot_deriv.r01.1D')
head(mm)
mm <- read.delim('mot_deriv.r01.1D', header = FALSE)
head(mm)
mm <- read.delim('mot_deriv.r01.1D', header = FALSE, sep = ' ')
head(mm)
colnames(mm) <- c('roll','pitch','yaw','dS','dL','dP')
plot(mm$roll)
ggplot(mm, aes(x = 1:dim(mm)[1], y = roll)) + geom_line()
ggplot(mm, aes(x = 1:dim(mm)[1], y = pitch)) + geom_line()
ggplot(mm, aes(x = 1:dim(mm)[1], y = yaw)) + geom_line()
ggplot(mm, aes(x = 1:dim(mm)[1], y = dP)) + geom_line()
mm2 <- read.delim('mot_deriv.1D', header = FALSE, sep = ' ')
plot(mm$roll)
dir()
mm2 <- read.delim('motion_deriv.1D', header = FALSE, sep = ' ')
head(mm2)
head(mm)
mm2 <- read.delim('motion_demean.1D', header = FALSE, sep = ' ')
colnames(mm2) <- c('roll','pitch','yaw','dS','dL','dP')
ggplot(mm2, aes(x = 1:dim(mm)[1], y = dP)) + geom_line()
ggplot(mm2, aes(x = 1:dim(mm)[1], y = dL)) + geom_line()
x <- fft(mm2$dP)
N <- length(x)
f <- (0:(N-1)) * 1000 / N
N
f
plot(f, Mod(x), type = "h", xlab = "Frequency (Hz)", ylab = "Amplitude", main = "Amplitude Spectrum")
f <- (0:(N-1)) * 1 / N
plot(f, Mod(x), type = "h", xlab = "Frequency (Hz)", ylab = "Amplitude", main = "Amplitude Spectrum")
Mod(x)
which(Mod(x) > 10)
f[which(Mod(x) > 10)]
plot(f[1:(N/2)], Mod(x[1:(N/2)]), type = "h", xlab = "Frequency (Hz)", ylab = "Amplitude", main = "Amplitude Spectrum")
xx <- x[1:(N/2)]
ff <- f[1:(N/2)]
plot(ff, Mod(xx), type = "h", xlab = "Frequency (Hz)", ylab = "Amplitude", main = "Amplitude Spectrum")
f[which(Mod(xx) > 10)]
xS <- fft(mm2$dS)
NS <- length(xS)
fS <- (0:(NS-1)) * 1 / NS
xxS <- xS[1:(NS/2)]
ffS <- fS[1:(NS/2)]
plot(ffS, Mod(xxS), type = "h", xlab = "Frequency (Hz)", ylab = "Amplitude", main = "Amplitude Spectrum")
df <- data.frame(ffS = ffS, modxs = Mod(xxS), xxS = xxS)
ggplot(df, aes(x = f, y = ModX)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum")
df <- data.frame(ffS = ffS, modxs = Mod(xxS), xxS = xxS)
ggplot(df, aes(x = ffS, y = modxs)) +
geom_segment(aes(xend = ffS, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum")
ggplot(df, aes(x = ffS, y = modxs)) +
geom_segment(aes(xend = ffS, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") +
coord_cartesian(ylim = c(0,15))
dfP <- data.frame(ff = ff, modx = Mod(xx), xx = xx)
ggplot(dfP, aes(x = ff, y = modx)) +
geom_segment(aes(xend = ff, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") +
coord_cartesian(ylim = c(0,15))
aa <- data.frame(f = ff, xdP = Mod(xx), xdS = Mod(xxS))
aa$PminusS <- aa$xdP - aa$xdS
ggplot(aa, aes(x = f, y = PminusS)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum")
ggplot(aa, aes(x = f, y = PminusS)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum: dP - dS")
xdP <- fft(mm2$dP)
xdS <- fft(mm2$dS)
xdL <- fft(mm2$dL)
N <- length(xdP)
f <- (0:(N-1)) * 1/N
xdP <- xdP[1:(N/2)]
xdS <- xdS[1:(N/2)]
xdL <- xdL[1:(N/2)]
f <- f[1:(N/2)]
df <- data.frame(f = f, xdP = xdP, xdS = xdS, xdL = xdL)
df$P_S <- df$xdP - df$xdS
df$P_L <- df$xdP - df$xdL
df$S_L <- df$xdS - df$xdL
head(df)
df <- data.frame(f = f, xdP = Mod(xdP), xdS = Mod(xdS), xdL = Mod(xdL))
df$P_S <- df$xdP - df$xdS
df$P_L <- df$xdP - df$xdL
df$S_L <- df$xdS - df$xdL
head(df)
df_long <- pivot_longer(df, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names to = "measure", values_to = "value")
df_long <- pivot_longer(df, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names_to = "measure", values_to = "value")
library(tidyr)
df_long <- pivot_longer(df, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names_to = "measure", values_to = "value")
head(df_long)
ggplot(df_long, aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 3)
ggplot(df_long, aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 3) + theme_bw()
ggsave('myfft.png', width = 12, height = 8)
dir()
1/.34
60/2.94
mme <- read.delim('motion_demean_ME.1D', header = FALSE, sep = ' ')
colnames(mme) <- c('roll','pitch','yaw','dS','dL','dP')
plot(mme$dP)
mme <- read.delim('motion_demean_ME.1D', header = FALSE, sep = ' ')
colnames(mme) <- c('roll','pitch','yaw','dS','dL','dP')
xedP <- fft(mme$dP)
xedS <- fft(mme$dS)
xedL <- fft(mme$dL)
Ne <- length(xedP)
fe <- (0:(Ne-1)) * 1/Ne
xedP <- xedP[1:(Ne/2)]
xedS <- xedS[1:(Ne/2)]
xedL <- xedL[1:(Ne/2)]
fe <- fe[1:(Ne/2)]
dfe <- data.frame(f = fe, xdP = Mod(xedP), xdS = Mod(xedS), xdL = Mod(xedL))
dfe$P_S <- df$xdP - df$xdS
dfe$P_L <- df$xdP - df$xdL
dfe$S_L <- df$xdS - df$xdL
dfe_long <- pivot_longer(dfe, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names_to = "measure", values_to = "value")
dim(dfe)
dfe <- data.frame(f = fe, xdP = Mod(xedP), xdS = Mod(xedS), xdL = Mod(xedL))
dfe$P_S <- dfe$xdP - dfe$xdS
dfe$P_L <- dfe$xdP - dfe$xdL
dfe$S_L <- dfe$xdS - dfe$xdL
dfe_long <- pivot_longer(dfe, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names_to = "measure", values_to = "value")
ggplot(dfe_long, aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 3) + theme_bw()
ggplot(subset(dfe_long, measure %in% c('xdP','xdS','xdL')), aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 1) + theme_bw() +
coord_cartesian(ylim = c(0,15))
fe <- (0:(Ne-1)) * 1.355/Ne
xedP <- xedP[1:(Ne/2)]
xedS <- xedS[1:(Ne/2)]
xedL <- xedL[1:(Ne/2)]
fe <- fe[1:(Ne/2)]
dfe <- data.frame(f = fe, xdP = Mod(xedP), xdS = Mod(xedS), xdL = Mod(xedL))
dfe$P_S <- dfe$xdP - dfe$xdS
dfe$P_L <- dfe$xdP - dfe$xdL
dfe$S_L <- dfe$xdS - dfe$xdL
dfe_long <- pivot_longer(dfe, cols = c(xdP, xdS, xdL, P_S, P_L, S_L), names_to = "measure", values_to = "value")
ggplot(subset(dfe_long, measure %in% c('xdP','xdS','xdL')), aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 1) + theme_bw() +
coord_cartesian(ylim = c(0,15))
ggsave('myfft_ME.png', width = 6, height = 6)
ggplot(subset(df_long, measure %in% c('xdP','xdS','xdL')), aes(x = f, y = value)) +
geom_segment(aes(xend = f, yend = 0), color = "blue", size = 1) +
xlab("Frequency (Hz)") +
ylab("Amplitude") +
ggtitle("Amplitude Spectrum") + facet_wrap(.~measure, ncol = 1) + theme_bw() +
coord_cartesian(ylim = c(0,15))
ggsave('myfft_BOLDQA.png', width = 6, height = 6)
